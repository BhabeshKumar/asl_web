{"ast":null,"code":"var _jsxFileName = \"/Users/bhabeshmohanty/Desktop/signlanguage/~asl_translator/testing/asl_web_demo/src/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { auth, provider } from \"./firebase\";\nimport { signInWithPopup, signOut, onAuthStateChanged } from \"firebase/auth\";\n\n// 1️⃣ Create Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// 2️⃣ Hook to use context\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// 3️⃣ Provider\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n\n  // Monitor user login status\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, setUser);\n    return () => unsubscribe();\n  }, []);\n\n  // Sign in with Google\n  const loginWithGoogle = () => signInWithPopup(auth, provider);\n\n  // ✅ Add logout function here\n  const logout = () => signOut(auth);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loginWithGoogle,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","auth","provider","signInWithPopup","signOut","onAuthStateChanged","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","unsubscribe","loginWithGoogle","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bhabeshmohanty/Desktop/signlanguage/~asl_translator/testing/asl_web_demo/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { auth, provider } from \"./firebase\";\nimport {\n  signInWithPopup,\n  signOut,\n  onAuthStateChanged,\n} from \"firebase/auth\";\n\n// 1️⃣ Create Context\nconst AuthContext = createContext();\n\n// 2️⃣ Hook to use context\nexport const useAuth = () => useContext(AuthContext);\n\n// 3️⃣ Provider\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  // Monitor user login status\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, setUser);\n    return () => unsubscribe();\n  }, []);\n\n  // Sign in with Google\n  const loginWithGoogle = () => signInWithPopup(auth, provider);\n\n  // ✅ Add logout function here\n  const logout = () => signOut(auth);\n\n  return (\n    <AuthContext.Provider value={{ user, loginWithGoogle, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,SAASC,IAAI,EAAEC,QAAQ,QAAQ,YAAY;AAC3C,SACEC,eAAe,EACfC,OAAO,EACPC,kBAAkB,QACb,eAAe;;AAEtB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGX,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMY,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMZ,UAAU,CAACU,WAAW,CAAC;AAAA;;AAEpD;AAAAE,EAAA,CAFaD,OAAO;AAGpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACAD,SAAS,CAAC,MAAM;IACd,MAAMiB,WAAW,GAAGX,kBAAkB,CAACJ,IAAI,EAAEc,OAAO,CAAC;IACrD,OAAO,MAAMC,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,eAAe,GAAGA,CAAA,KAAMd,eAAe,CAACF,IAAI,EAAEC,QAAQ,CAAC;;EAE7D;EACA,MAAMgB,MAAM,GAAGA,CAAA,KAAMd,OAAO,CAACH,IAAI,CAAC;EAElC,oBACEM,OAAA,CAACC,WAAW,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAEN,IAAI;MAAEG,eAAe;MAAEC;IAAO,CAAE;IAAAN,QAAA,EAC5DA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACX,GAAA,CApBWF,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}